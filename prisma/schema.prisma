generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id               String         @id @default(uuid())
  email            String         @unique
  password         String
  name             String
  phone            String?
  company          String?
  userType         UserType       @default(PERSONAL)
  profileImage     String?
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  favorites        Favorite[]
  listings         Listing[]
  receivedMessages Message[]      @relation("ReceivedMessages")
  sentMessages     Message[]      @relation("SentMessages")
  conversations    Conversation[] @relation("UserConversations")
}

model Listing {
  id            String         @id @default(uuid())
  title         String
  description   String
  price         Float
  condition     Condition
  categoryId    String
  materialId    String
  images        String[]       @default([])
  location      String
  sellerId      String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  expiresAt     DateTime?
  conversations Conversation[]
  favorites     Favorite[]
  category      Category       @relation(fields: [categoryId], references: [id])
  material      MaterialType   @relation(fields: [materialId], references: [id])
  seller        User           @relation(fields: [sellerId], references: [id])
}

model Category {
  id          String    @id @default(uuid())
  name        String    @unique
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  listings    Listing[]
}

model MaterialType {
  id          String    @id @default(uuid())
  name        String    @unique
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  listings    Listing[]
}

model Conversation {
  id        String    @id @default(uuid())
  listingId String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  listing   Listing?  @relation(fields: [listingId], references: [id])
  messages  Message[]
  users     User[]    @relation("UserConversations")
}

model Message {
  id             String       @id @default(uuid())
  content        String
  senderId       String
  receiverId     String
  conversationId String
  isRead         Boolean      @default(false)
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  receiver       User         @relation("ReceivedMessages", fields: [receiverId], references: [id])
  sender         User         @relation("SentMessages", fields: [senderId], references: [id])
}

model Favorite {
  id        String   @id @default(uuid())
  userId    String
  listingId String
  createdAt DateTime @default(now())
  listing   Listing  @relation(fields: [listingId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@unique([userId, listingId])
}

enum UserType {
  PERSONAL
  BUSINESS
}

enum Condition {
  NEW
  USED
}
